services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk_kafka_net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk_kafka_net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "9600:9600"
      - "5044:5044"
    depends_on:
      - elasticsearch
    environment:
      - CONFLUENT_BOOTSTRAP_SERVERS=${CONFLUENT_BOOTSTRAP_SERVERS}
      - CONFLUENT_API_KEY=${CONFLUENT_API_KEY}
      - CONFLUENT_API_SECRET=${CONFLUENT_API_SECRET}
    networks:
      - elk_kafka_net
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
    - "6379:6379"
  # postgres:
  #   image: postgres:12.16
  #   environment:
  #     POSTGRES_USER: postgres      
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
  #     POSTGRES_DB: mydb             
  #   ports:
  #     - "5432:5432"  
  #   volumes:
  #     - ./data/database:/docker-entrypoint-initdb.d  
                                            
  #     - pgdata:/var/lib/postgresql/data    
  #   networks:
  #     - elk_kafka_net 

  # pgadmin:  
  #   image: dpage/pgadmin4  
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com  
  #     PGADMIN_DEFAULT_PASSWORD: admin         
  #   ports:
  #     - "5050:80"  
  #   networks:
  #     - elk_kafka_net
  # chatbot:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "7860:7860"
  #   environment:
  #     - GEMINI_API_KEY=${GEMINI_API_KEY}
  #     - PINECONE_API_KEY=${PINECONE_API_KEY}
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - elasticsearch

networks:
  elk_kafka_net:
    driver: bridge

volumes:
  esdata:
  pgdata: